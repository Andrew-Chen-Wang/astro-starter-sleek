---
import i18next, { changeLanguage } from "i18next";
import HeroImage from "@components/blog/HeroImage.astro";
import { localizePath } from "astro-i18next";
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import Title from "@src/components/blog/BlogHeader.astro";
import Pagination from "@components/blog/Pagination.astro";

changeLanguage("en");

export async function getStaticPaths({ paginate }: any) {
	changeLanguage('en');
    const posts = (await getCollection("blog")).sort((a, b) => {
        return a.data.pubDate.valueOf() - b.data.pubDate.valueOf();
    });
    // Preprocess the posts to split the slugs and get the languages
    var processedPosts = posts.map((post) => {
        const [...slug] = post.slug.split("/");
        let lang = i18next.language;
        var firstSlug = post.slug.match(/^([^\/]*)\//);
        if (firstSlug) {
            lang = firstSlug[1];
        }
        return {
            ...post,
            slug: slug.join("/"),
            lang: lang,
        };
    });
    const localizedPosts = processedPosts.filter((post) => post.lang === i18next.language);
    return paginate(localizedPosts, {
        params: { blog: "blog" || undefined },
        pageSize: 6,
    });
}
const { page: { data: posts, url }, } = Astro.props;
---

<Layout>
	<section>
		<Container class="pt-16">
			<ul class="grid grid-cols-2 gap-6 list-none p-0 m-0">
				{
					posts.map((post: any, index: number) => (
						<li class={`${index === 0 ? "w-full text-center mb-4 col-span-2" : ""}`}>
							<a href={localizePath(`/blog/${post.slug.split("/").slice(1).join("/")}/`)} class="block transition-colors duration-200">
								<HeroImage
									class={`${index === 0 ? "w-full" : ""} mb-2 rounded-lg hover:shadow-md`}
									src={post.data.heroImage}
									alt={post.data.title}
									width={720}
									height={360}
								/>
								<Title
									pubDate={post.data.pubDate}
									name={`title-${post.data.title}`}
									isSubheading={true}
									class={`${index === 0 ? "text-6xl" : ""} text-black m-0`}>
									{post.data.title}
								</Title>
							</a>
						</li>
					))
				}
			</ul>
			<Pagination class="mt-20" prevUrl={url.prev} nextUrl={url.next} />
		</Container>
	</section>
</Layout>
